on:
  workflow_call:
    inputs:
      lambda-function-name:
        required: true
        type: string
        description: 'the name of the lambda function you want to update'
      ecr-repository-name:
        required: true
        type: string
        description: 'the name of the repository in ECR'
      image-tag:
        required: false
        type: string
        default: 'latest'
        description: 'the tag of the docker image, by default latest'
      
      
    secrets:
      AWS_KEY:
        required: true
      AWS_SECRET:
        required: true
      AWS_REGION:
        required: true
jobs:
  - name: install-aws-cli-action
    uses: unfor19/install-aws-cli-action@v1
  - name: Configure AWS credentials
    uses: aws-actions/configure-aws-credentials@v1
  with:
    aws-access-key-id: ${{ secrets.AWS_KEY }}
    aws-secret-access-key: ${{ secrets.AWS_SECRET }}
    aws-region: ${{ secrets.AWS_REGION }}
  - name: Login to Amazon ECR
    id: login-ecr
    uses: aws-actions/amazon-ecr-login@v1

  - name: Build, tag, and push docker image to Amazon ECR
    env:
      REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      REPOSITORY: ${{ inputs.ecr-repository-name }}
      IMAGE_TAG: ${{ inputs.image-tag }}
    run: |
      docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
      docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
  - name: deploy lambda that uses image
    env:
      REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      REPOSITORY: ${{ inputs.ecr-repository-name }}
      IMAGE_TAG: ${{ inputs.image-tag }}
    run: aws lambda update-function-code --function-name ${{ inputs.lambda-function-name }} --image-uri $REGISTRY/$REPOSITORY:$IMAGE_TAG 